{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Sven's Course Notes","text":"<p>This is my home page. I will use it to organize and share my course notes.</p>"},{"location":"tutorials/go-setup/","title":"Setting Up A Dev Container For Go","text":"<ul> <li>Primary author: Sven Reyes</li> </ul> <p>Welcome! In this tutorial, you'll learn how to create a new dev container for Go. By the end of this guide, you'll set up a Go development container (dev container) in Visual Studio Code (VS Code). </p>"},{"location":"tutorials/go-setup/#prerequisites","title":"Prerequisites","text":"<p>Ensure you have the following installed on your system:</p> <ul> <li>GitHub account</li> <li>Visual Studio Code (VSCode)</li> <li>Docker</li> <li>Git</li> </ul> <p>Install the VSCode extensions:</p> <ul> <li>Remote - Containers</li> <li>Go (by the Go Team at Google)</li> </ul>"},{"location":"tutorials/go-setup/#step-by-step-instructions","title":"Step-by-Step Instructions","text":"<ol> <li>Create a Blank Directory<ol> <li>Open your terminal.</li> <li>Create a new directory for your project: <pre><code>mkdir go-devcontainer\ncd go-devcontainer\n</code></pre></li> <li>Initialize a Git repository: <pre><code>git init\n</code></pre></li> </ol> </li> <li>Add a DevContainer<ol> <li>Inside the <code>go-devcontainer</code> directory, create a folder named <code>.devcontainer</code>: <pre><code>mkdir .devcontainer\n</code></pre></li> <li>Create a <code>devcontainer.json</code> file inside <code>.devcontainer</code>: <pre><code>touch .devcontainer/devcontainer.json\n</code></pre></li> <li>Add the following configuration to <code>devcontainer.json</code>: <pre><code>{\n    \"name\": \"Go DevContainer\",\n    \"image\": \"mcr.microsoft.com/devcontainers/go:1.20\",\n    // Custom VS Code settings\n    \"customizations\": {\n        \"vscode\": {\n            \"extensions\": [\n                \"ms-vscode.Go\"\n            ]\n        }\n    }\n}\n</code></pre></li> </ol> </li> <li> <p>Start the DevContainer</p> <p>Docker</p> <p>Make sure Docker is running before reopening the project in a container.</p> <ol> <li>Open the folder in VSCode with <code>File &gt; Open Folder</code></li> <li>Reopen the project in a DevContainer:<ul> <li>Press <code>Ctrl+Shift+P</code> (or <code>Cmd+Shift+P</code> on Mac) in VSCode.</li> <li>Select Remote-Containers: Reopen in Container. This may take a few minutes while the image is downloaded and the requirements are installed.</li> </ul> </li> </ol> </li> <li> <p>Verify the Go Installation</p> <ol> <li>Open the terminal in VSCode (inside the container).</li> <li>Run the following command to verify the Go version is recent: <pre><code>go version\n</code></pre></li> </ol> <p>Note</p> <p>Use <code>go version</code> to ensure a recent Go installation.</p> </li> <li>Set Up a Go Project<ol> <li>Initialize a new Go module by running the following commands: <pre><code>go mod init hello-comp423\n</code></pre></li> <li>Create a new Go file named main.go: <pre><code>touch main.go\n</code></pre></li> </ol> </li> <li>Write the \"Hello COMP423\" Program and add the following code to main.go:     <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello COMP423\")\n}\n</code></pre></li> <li>Run the Program<ol> <li>Run the program directly: <pre><code>go run main.go\n</code></pre> The output should look like this: <pre><code>Hello COMP423\n</code></pre></li> <li>Build the program: <pre><code>go build -o hello-comp423\n</code></pre></li> <li>Run the built binary: <pre><code>./hello-comp423\n</code></pre></li> </ol> </li> </ol> <p>Info</p> <ul> <li><code>go run</code>: Compiles and executes the program directly without generating a binary.</li> <li><code>go build</code>: Creates an executable binary that can be run independently.</li> </ul>"}]}